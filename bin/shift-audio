#!/usr/bin/env python3

import argparse
import pathlib
import subprocess
import sys


def ffmpeg_available() -> bool:
    """
    Checks if ffmpeg is available on the system.

    Returns:
        bool: True if ffmpeg is available, False otherwise.
    """
    try:
        subprocess.run(
            ["ffmpeg", "-version"],
            stdout=subprocess.DEVNULL,
            stderr=subprocess.DEVNULL,
        )

        return True
    except FileNotFoundError:
        return False


def ffmpeg_shift(input_file: pathlib.Path, output_file: pathlib.Path, shift: float) -> bool:
    """
    Shifts the audio of a video file by a given amount of seconds and saves it to a new file.

    Args:
        input_file (pathlib.Path): The path to the input file.
        output_file (pathlib.Path): The path to the output file.
        shift (float): The number of seconds to shift the audio by. If the audio is ahead of the video, use a negative number.

    Returns:
        bool: True if the operation was successful, False otherwise.
    """
    if not input_file.exists():
        print(f"Input file does not exist: {input_file}")
        return False

    if output_file.exists():
        if input(f"Output file {output_file} already exists, overwrite? [y/N] ").lower() != "y":
            return True # user confirmed not to overwrite, so this is a success

    # ffmpeg -y -i {in} -itsoffset {shift} -i {in} -map 0:v -map 1:a -c copy {out}
    subprocess.run(
        [
            "ffmpeg",
            "-y",
            "-i",
            str(input_file.absolute()),
            "-itsoffset",
            str(shift),
            "-i",
            str(input_file.absolute()),
            "-map",
            "0:v",
            "-map",
            "1:a",
            "-c",
            "copy",
            str(output_file.absolute()),
        ],
        stdout=sys.stdout,
        stderr=sys.stderr,
        check=True,
    )

    return True


def main():
    if not ffmpeg_available():
        print("ffmpeg not found")
        return

    parser = argparse.ArgumentParser(
        description="Shift audio file by a given amount of seconds")
    parser.add_argument("input_file", type=pathlib.Path)
    parser.add_argument("output_file", type=pathlib.Path)
    parser.add_argument(
        "shift", type=float, help="The number of seconds to shift the audio by. If the audio is ahead of the video, use a negative number.")
    args = parser.parse_args()
    success = ffmpeg_shift(args.input_file, args.output_file, args.shift)
    if not success:
        sys.exit(1)


if __name__ == "__main__":
    main()
